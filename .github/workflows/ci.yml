# This is a basic workflow to help you get started with Actions

name: CI

on:
  push:
    branches:
      - master
      - feat/**
      - dev/**
      - release/**
  pull_request:
    branches:
      - master
      - feat/**
      - dev/**
      - release/**

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    if: github.repository_owner == 'telosprotocol' && (github.event.action == 'opened' || github.event.action == 'reopened' || github.event.action == 'synchronize' || github.event_name == 'pushed')
    # if: github.event.action == 'opened' || github.event.action == 'reopened' || github.event_name == 'push'
    runs-on: [self-hosted, Linux, X64]
    
    # for ci telos only
    steps:
      - name: Print event
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: |
          echo "$GITHUB_CONTEXT"

      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          clean: false
          submodules: recursive
      
      - name: Run Git Clean
        run: git clean -ffdx -e cbuild/

      - name: Build XTOP DEBUG
        run: |
          bash .github/scripts/build_xtop.sh "test build_ci chain_forked_by_default"

      - name: UnitTest
        run: |
          bash .github/scripts/test_ut.sh

      - name: TEST XTOP AllInOne
        env:
          RUN_NUM: ${{ github.run_number }}
        run: |
          sudo bash .github/scripts/test_xtop_allinone.sh "$RUN_NUM"

      - name: Notify
        if: always()
        run: |
          bash .github/scripts/notify.sh ${{ github.event.number }} ${{ job.status }} "#${{ github.event.number }} from ${{ github.event.pull_request.head.repo.html_url }} to ${{ github.event.repository.html_url }} has ${{ job.status }}, please check ${{ github.event.pull_request.html_url }}" "./ut_report/report.tar.gz"
